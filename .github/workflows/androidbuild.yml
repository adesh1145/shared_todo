name: Flutter CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: flutter-actions/setup-flutter@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Install yq and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq yq
          yq --version  # Check if yq installed correctly

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          VERSION=$(yq eval '.version' ./pubspec.yaml)
          APP_NAME=$(yq eval '.name' ./pubspec.yaml)
          echo "Version extracted: $VERSION"
          echo "App name extracted: $APP_NAME"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

      - name: Create Git tag
        run: |
          TAG_NAME="v${{ env.VERSION }}" # Use the extracted version as the tag
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Wait for Git tag to be pushed
        run: |
          echo "Waiting for Git tag to be pushed to the repository..."
          sleep 10  # Wait time for tag to propagate

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_NAME="${{ env.APP_NAME }} v${{ env.VERSION }}"
          gh release create v${{ env.VERSION }} build/app/outputs/flutter-apk/app-release.apk --title "$RELEASE_NAME" --notes "Release notes for version $RELEASE_NAME"
